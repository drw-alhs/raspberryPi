#################################
#    Samples include: If/Else, While, For, Recursion
#    https://www.cyberciti.biz/faq/bash-for-loop/
#    https://decal.ocf.berkeley.edu/archives/2022-spring/labs/b3/
#################################
#################################
#    Simple If/Else
#################################
a=10
b=20

if [ $a -eq $b ]; then
    echo 'a is equal to b'
elif [ $a -gt $b ]; then
    echo 'a is greater than b'
else
    echo 'a is less than b'
fi

# Output:
# 'a is less than b'


#################################
#    Simple While
#################################
#!/bin/bash
# contents of awesome_shell_script

n=$1
while [ $n -gt 0 ]; do
  echo $n
  let n=$n-1
done


#################################
#    Simple For Loop
#################################
#!/bin/bash
echo "Bash version ${BASH_VERSION}..."
for i in {0..10..2}
do 
  echo "Welcome $i times"
done
#################################
#    Simple Function
#################################
#!/bin/bash
# contents of awesome_shell_script

foo() {
  echo hello $1
}

foo $1
#################################
#    Simple Recursion (not!)
#################################


#!/bin/bash
# contents of fibonacci

if [ $# -eq 0 ]; then
    echo "fibonacci needs an argument"
    exit 1
fi

fib() {
    N="$1"
    if [ -z "${N##*[!0-9]*}" ]; then
        echo "fibonacci only makes sense for nonnegative integers"
        exit 1
    fi

    if [ "$N" -eq 0 ]; then
        echo 0
    elif [ "$N" -eq 1 ]; then
        echo 1
    else
        echo $(($(fib $((N-2))) + $(fib $((N-1)))))
    fi
}

fib "$1"
